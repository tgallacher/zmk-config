/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
// helpers
#include "../zmk-nodefree-config/helper.h"


#define _BT_SEL_KEYS_ &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR
#define _ARROW_KEYS_ &kp LEFT_ARROW   &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT_ARROW
#define XXX &none
#define ___ &trans

/* Global Settings */
#define QUICK_TAP_MS 125

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Custom key press behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kp>, <&kp>;
)

/*
 *
 * Note: OS keyboard input must be set to "British PC" and the keyboard type must be ISO
 * Note: This will swap the keycodes `AT` and `DQT`
 */
#define BASE   0
#define SYMBL  1
#define NUMFN  2
#define HRDWR  3
#define NAV    4

// &led_strip {
//   chain-length = <12>;
// };
//
// &kscan {
//   debounce-press-ms = <1>;
//   debounce-release-ms = <5>;
// };

/* Keymap */

ZMK_LAYER(base,
  // ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮     ╭────────────────┬────────────────┬──────────────┬─────────────────┬──────────┬────────────╮
       &lt NUMFN ESC          &kp Q            &kp W             &kp E             &kp R             &kp T                   &kp Y           &kp U         &kp I           &kp O          &kp P       &kp BSPC
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
  //                                                                                                                                                                                                      '@
       &lt LCTRL TAB          &kp A            &kp S             &kp D           &kp F              &kp G                    &kp H           &kp J         &kp K           &kp L          &kp SEMI    &kp SQT
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
  //                                                                                                                                                            ,<              .>             /?
       &kp LSHIFT          &lt SYMBL Z         &kp X             &kp C             &kp V             &kp B                   &kp N           &kp M         &kp COMMA       &kp DOT        &kp FSLH  &mt RSHIFT RETURN
  // ╰─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────╯
                                                                &mo HRDWR          &kp LALT         &kp LGUI                &kp SPACE        &kp MINUS     XXX
  //                                                       ╰─────────────────┴─────────────────┴─────────────────╯     ╰────────────────┴────────────────┴──────────────╯
)

ZMK_LAYER(symbols,
  // ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮     ╭────────────────┬────────────────┬──────────────┬─────────────────┬──────────┬────────────╮
  //                           !                   '@                £                $                  %                      ^                &               *                 (             )           -
            XXX             &kp EXCL            &kp SQT          &kp HASH         &kp DLLR          &kp PRCNT               &kp CARET        &kp AMPS      &kp KP_MULTIPLY     &kp LPAR      &kp RPAR    &kp MINUS
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
  //                                                                                                                           #~               =+              `¬               [{            ]}         "
            XXX               XXX                 XXX               XXX             XXX                XXX                 &kp NUHS         &kp EQUAL       &kp GRAVE         &kp LBKT      &kp RBKT    &kp AT
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
  //                                                                                                                          \|
            ___               XXX                 XXX               XXX             XXX               XXX                  &kp NUBS            XXX            ___               ___          ___          ___
  // ╰─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────╯
                                                                    XXX             XXX               ___                     ___               ___           ___
  //                                                       ╰─────────────────┴─────────────────┴─────────────────╯     ╰────────────────┴────────────────┴──────────────╯
)

ZMK_LAYER(num_fn,
  // ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮     ╭────────────────┬────────────────┬──────────────┬─────────────────┬──────────┬────────────╮
       ___                    &kp F1            &kp F2            &kp F3            &kp F4            &kp F5                 &kp N7           &kp N8          &kp N9      &kp KP_MULTIPLY      ___     &kp BSPC
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
       ___                    &kp F6            &kp F7            &kp F8            &kp F9            &kp F10                &kp N4           &kp N5          &kp N6          ___              ___       ___
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
       ___                    XXX               XXX               XXX               &kp F11           &kp F12                &kp N1           &kp N2          &kp N3          &kp DOT       &kp FSLH   &kp EQUAL
  // ╰─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────╯
                                                                  XXX                 XXX              XXX                  &kp MINUS         &kp N0          &kp PLUS
  //                                                       ╰─────────────────┴─────────────────┴─────────────────╯     ╰────────────────┴────────────────┴──────────────╯
)

ZMK_LAYER(hardware,
  // ╭─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮     ╭────────────────┬────────────────┬──────────────┬─────────────────┬──────────┬────────────╮
       &rgb_ug RGB_BRI   &rgb_ug RGB_SAI   &rgb_ug RGB_HUI   &rgb_ug RGB_EFF   &rgb_ug RGB_SPI   &rgb_ug RGB_TOG         &kp C_VOL_DN     &kp K_MUTE       &kp C_VOL_UP   &kp C_PREV        &kp C_PP   &kp C_NEXT
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
       &rgb_ug RGB_BRD   &rgb_ug RGB_SAD   &rgb_ug RGB_HUD   &rgb_ug RGB_EFR   &rgb_ug RGB_SPD   XXX                                        _ARROW_KEYS_                  XXX               XXX        XXX
  // ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────┤
                                                    _BT_SEL_KEYS_                                                        XXX              XXX              XXX            XXX               XXX        XXX
  // ╰─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤     ├────────────────┼────────────────┼──────────────┼─────────────────┼──────────┼────────────╯
                                                             ___               ___               ___                     ___              ___              ___
  //                                                       ╰─────────────────┴─────────────────┴─────────────────╯     ╰────────────────┴────────────────┴──────────────╯
)

// ZMK_LAYER(nav,
//   // ╭─────┬─────┬─────┬─────┬─────┬─────╮     ╭─────┬─────┬─────┬─────┬─────┬─────╮
//        XXX   XXX   XXX   XXX   XXX   XXX         XXX   XXX   XXX   XXX   XXX   ___
//   // ├─────┼─────┼─────┼─────┼─────┼─────┤     ├─────┼─────┼─────┼─────┼─────┼─────┤
//        XXX   XXX   XXX   XXX   XXX   XXX              _ARROW_KEYS_       XXX   XXX
//   // ├─────┼─────┼─────┼─────┼─────┼─────┤     ├─────┼─────┼─────┼─────┼─────┼─────┤
//        ___   XXX   XXX   XXX   XXX   XXX         XXX   XXX   XXX   XXX   XXX   XXX
//   // ╰─────┼─────┼─────┼─────┼─────┼─────┤     ├─────┼─────┼─────┼─────┼─────┼─────╯
//                          XXX   XXX   ___         ___   ___   ___
//   //                   ╰─────┴─────┴─────╯     ╰─────┴─────┴─────╯
// )

// vi: ft=c
